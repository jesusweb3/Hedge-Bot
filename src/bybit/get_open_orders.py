# -*- coding: utf-8 -*-
"""
–ú–æ–¥—É–ª—å: –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤ –ø–æ —Å–∏–º–≤–æ–ª—É (Bybit V5).
–†–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –ª–∏–Ω–µ–π–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ (category="linear").
–ß–∏—Ç–∞–µ—Ç –∫–ª—é—á–∏ –∏–∑ .env.
–í –Ω–∞—á–∞–ª–µ —É–∫–∞–∑—ã–≤–∞–µ–º SYMBOL.
–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–µ—á–∞—Ç–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ä–¥–µ—Ä–æ–≤ (–∏–ª–∏ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫).
"""

import os
import sys
from dotenv import load_dotenv
from pybit.unified_trading import HTTP

# üîß –°–∏–º–≤–æ–ª
SYMBOL = "BTCUSDT"

def _str_to_bool(v: str | None) -> bool:
    return (v or "").strip().lower() in {"1", "true", "yes", "y", "on"}

def get_open_orders(symbol: str) -> list[dict]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤ (–≤–∫–ª—é—á–∞—è —É—Å–ª–æ–≤–Ω—ã–µ).
    """
    load_dotenv()
    api_key = os.getenv("BYBIT_API_KEY")
    api_secret = os.getenv("BYBIT_API_SECRET")
    testnet = _str_to_bool(os.getenv("BYBIT_TESTNET"))

    if not api_key or not api_secret:
        raise RuntimeError("–ù–µ—Ç –∫–ª—é—á–µ–π BYBIT_API_KEY/BYBIT_API_SECRET –≤ .env")

    http = HTTP(testnet=testnet, api_key=api_key, api_secret=api_secret,
                timeout=10_000, recv_window=5_000)

    resp = http.get_open_orders(category="linear", symbol=symbol)

    if not isinstance(resp, dict) or resp.get("retCode") != 0:
        raise RuntimeError(f"Bybit API error: {resp}")

    return resp["result"]["list"] or []

if __name__ == "__main__":
    try:
        orders = get_open_orders(SYMBOL)
        print(orders)
    except Exception as exc:
        print(f"ERROR: {exc}", file=sys.stderr)
        sys.exit(1)
